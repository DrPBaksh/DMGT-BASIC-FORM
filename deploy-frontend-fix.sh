#!/usr/bin/env bash
# Quick fix script for frontend deployment when infrastructure is already deployed

set -euo pipefail

# Configuration
ENVIRONMENT="dev"
REGION="eu-west-2"
STACK_NAME="dmgt-basic-form-${ENVIRONMENT}"
FRONTEND_DIR="./frontend"

echo "🚀 DMGT Basic Form - Frontend Only Deployment Fix"
echo "=================================================="

# Get stack outputs
echo "📋 Retrieving stack outputs..."
CONFIG_BUCKET=$(aws cloudformation describe-stacks \
    --stack-name $STACK_NAME \
    --region $REGION \
    --query "Stacks[0].Outputs[?OutputKey=='ConfigBucketName'].OutputValue" \
    --output text)

WEBSITE_BUCKET=$(aws cloudformation describe-stacks \
    --stack-name $STACK_NAME \
    --region $REGION \
    --query "Stacks[0].Outputs[?OutputKey=='WebsiteBucketName'].OutputValue" \
    --output text)

API_URL=$(aws cloudformation describe-stacks \
    --stack-name $STACK_NAME \
    --region $REGION \
    --query "Stacks[0].Outputs[?OutputKey=='ApiGatewayUrl'].OutputValue" \
    --output text)

CLOUDFRONT_URL=$(aws cloudformation describe-stacks \
    --stack-name $STACK_NAME \
    --region $REGION \
    --query "Stacks[0].Outputs[?OutputKey=='WebsiteURL'].OutputValue" \
    --output text)

echo "✅ Stack outputs retrieved:"
echo "   API URL: $API_URL"
echo "   Website Bucket: $WEBSITE_BUCKET"
echo "   CloudFront URL: $CLOUDFRONT_URL"

# Create environment file
echo "🔧 Creating environment configuration..."
cat > "$FRONTEND_DIR/.env.production" << EOF
# Generated by frontend deployment fix on $(date)
REACT_APP_API_URL=$API_URL
GENERATE_SOURCEMAP=false
EOF

# Build frontend
echo "🏗️ Building React application..."
cd "$FRONTEND_DIR"
npm ci --silent
npm run build
cd ..

# Deploy to S3
echo "📤 Deploying to S3..."
aws s3 sync "$FRONTEND_DIR/build/" "s3://$WEBSITE_BUCKET" --delete --region $REGION

# Invalidate CloudFront
echo "🔄 Invalidating CloudFront cache..."
DISTRIBUTION_ID=$(aws cloudformation describe-stack-resources \
    --stack-name $STACK_NAME \
    --region $REGION \
    --query "StackResources[?ResourceType=='AWS::CloudFront::Distribution'].PhysicalResourceId" \
    --output text)

if [ ! -z "$DISTRIBUTION_ID" ] && [ "$DISTRIBUTION_ID" != "None" ]; then
    aws cloudfront create-invalidation \
        --distribution-id $DISTRIBUTION_ID \
        --paths "/*" > /dev/null
    echo "✅ CloudFront cache invalidation created"
fi

echo ""
echo "🎉 Frontend deployment completed!"
echo "🌐 Your app: $CLOUDFRONT_URL"
echo "🧪 Test API: $API_URL/config/Company"
