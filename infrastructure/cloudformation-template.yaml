AWSTemplateFormatVersion: '2010-09-09'
Description: 'DMGT Basic Form - Complete infrastructure with enhanced CORS and API Gateway support'

Parameters:
  Environment:
    Type: String
    Default: 'dev'
    AllowedValues: [dev, staging, prod]
    Description: Environment name

Resources:
  # S3 Bucket for Form Configuration (CSV files) 
  DMGTFormConfigBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub 'dmgt-basic-form-config-${Environment}-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            AllowedOrigins:
              - "*"
            MaxAge: 3600
      Tags:
        - Key: Project
          Value: dmgt-basic-form
        - Key: Environment
          Value: !Ref Environment

  # S3 Bucket for Form Responses
  DMGTFormResponsesBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub 'dmgt-basic-form-responses-${Environment}-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            AllowedOrigins:
              - "*"
            MaxAge: 3600
      Tags:
        - Key: Project
          Value: dmgt-basic-form
        - Key: Environment
          Value: !Ref Environment

  # S3 Bucket for Static Website Hosting
  DMGTFormWebsiteBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub 'dmgt-basic-form-website-${Environment}-${AWS::AccountId}'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - HEAD
            AllowedOrigins:
              - "*"
            MaxAge: 3600
      Tags:
        - Key: Project
          Value: dmgt-basic-form
        - Key: Environment
          Value: !Ref Environment

  # S3 Bucket Policy for Website
  DMGTFormWebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref DMGTFormWebsiteBucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub 'arn:aws:s3:::${DMGTFormWebsiteBucket}/*'

  # IAM Role for Lambda Functions
  DMGTFormLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'dmgt-basic-form-lambda-role-${Environment}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                  - s3:GetObjectAttributes
                  - s3:GeneratePresignedUrl
                Resource:
                  - !Sub 'arn:aws:s3:::${DMGTFormConfigBucket}'
                  - !Sub 'arn:aws:s3:::${DMGTFormConfigBucket}/*'
                  - !Sub 'arn:aws:s3:::${DMGTFormResponsesBucket}'
                  - !Sub 'arn:aws:s3:::${DMGTFormResponsesBucket}/*'
      Tags:
        - Key: Project
          Value: dmgt-basic-form
        - Key: Environment
          Value: !Ref Environment

  # Enhanced Lambda Function with proper CORS support
  DMGTFormMainLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub 'dmgt-basic-form-responses-${Environment}'
      Runtime: python3.11
      Handler: index.lambda_handler
      Role: !GetAtt DMGTFormLambdaRole.Arn
      Timeout: 30
      MemorySize: 512
      Environment:
        Variables:
          CONFIG_BUCKET: !Ref DMGTFormConfigBucket
          RESPONSES_BUCKET: !Ref DMGTFormResponsesBucket
          REGION: !Ref AWS::Region
          VERSION: "7.0-cors-enhanced"
      Code:
        ZipFile: |
          # This will be replaced by the actual Lambda function code from the separate file
          # during deployment. The actual code is in infrastructure/lambda/responses-function/index.py
          import json
          
          def lambda_handler(event, context):
              return {
                  'statusCode': 200,
                  'headers': {
                      'Access-Control-Allow-Origin': '*',
                      'Access-Control-Allow-Headers': 'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token',
                      'Access-Control-Allow-Methods': 'OPTIONS,POST,GET,PUT,DELETE,PATCH'
                  },
                  'body': json.dumps({'message': 'Lambda function template - will be replaced during deployment'})
              }
      Tags:
        - Key: Project
          Value: dmgt-basic-form
        - Key: Environment
          Value: !Ref Environment

  # API Gateway
  DMGTFormAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub 'dmgt-basic-form-api-${Environment}'
      Description: API for DMGT Basic Form with Enhanced CORS Support
      EndpointConfiguration:
        Types:
          - REGIONAL
      Tags:
        - Key: Project
          Value: dmgt-basic-form
        - Key: Environment
          Value: !Ref Environment

  # API Gateway Resources - /responses
  ResponsesResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ParentId: !GetAtt DMGTFormAPI.RootResourceId
      PathPart: responses

  # /responses/company-status
  CompanyStatusResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ParentId: !Ref ResponsesResource
      PathPart: company-status

  CompanyStatusIdResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ParentId: !Ref CompanyStatusResource
      PathPart: '{companyId}'

  # /responses/employee-list
  EmployeeListResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ParentId: !Ref ResponsesResource
      PathPart: employee-list

  EmployeeListIdResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ParentId: !Ref EmployeeListResource
      PathPart: '{companyId}'

  # /responses/employee-data
  EmployeeDataResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ParentId: !Ref ResponsesResource
      PathPart: employee-data

  EmployeeDataCompanyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ParentId: !Ref EmployeeDataResource
      PathPart: '{companyId}'

  EmployeeDataEmployeeResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ParentId: !Ref EmployeeDataCompanyResource
      PathPart: '{employeeId}'

  # /responses/save-company
  SaveCompanyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ParentId: !Ref ResponsesResource
      PathPart: save-company

  # /responses/save-employee
  SaveEmployeeResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ParentId: !Ref ResponsesResource
      PathPart: save-employee

  # OPTIONS Methods for CORS
  ResponsesOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref ResponsesResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  CompanyStatusOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref CompanyStatusIdResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  EmployeeListOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref EmployeeListIdResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  EmployeeDataOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref EmployeeDataEmployeeResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  SaveCompanyOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref SaveCompanyResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  SaveEmployeeOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref SaveEmployeeResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  # API Gateway Methods - GET/POST methods
  CompanyStatusMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref CompanyStatusIdResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DMGTFormMainLambda.Arn}/invocations'

  EmployeeListMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref EmployeeListIdResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DMGTFormMainLambda.Arn}/invocations'

  EmployeeDataMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref EmployeeDataEmployeeResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DMGTFormMainLambda.Arn}/invocations'

  SaveCompanyMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref SaveCompanyResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DMGTFormMainLambda.Arn}/invocations'

  SaveEmployeeMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref SaveEmployeeResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DMGTFormMainLambda.Arn}/invocations'

  # Catch-all proxy resource for additional endpoints
  ProxyResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ParentId: !GetAtt DMGTFormAPI.RootResourceId
      PathPart: '{proxy+}'

  ProxyMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref ProxyResource
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DMGTFormMainLambda.Arn}/invocations'

  ProxyOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DMGTFormAPI
      ResourceId: !Ref ProxyResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,POST,PUT,DELETE,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: true
            method.response.header.Access-Control-Allow-Methods: true
            method.response.header.Access-Control-Allow-Origin: true

  # API Gateway Deployment
  DMGTFormAPIDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - CompanyStatusMethod
      - EmployeeListMethod
      - EmployeeDataMethod
      - SaveCompanyMethod
      - SaveEmployeeMethod
      - CompanyStatusOptionsMethod
      - EmployeeListOptionsMethod
      - EmployeeDataOptionsMethod
      - SaveCompanyOptionsMethod
      - SaveEmployeeOptionsMethod
      - ProxyMethod
      - ProxyOptionsMethod
    Properties:
      RestApiId: !Ref DMGTFormAPI
      StageName: !Ref Environment

  # Lambda Permission
  DMGTFormMainLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DMGTFormMainLambda
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${DMGTFormAPI}/*/*/*'

  # CloudFront Distribution with enhanced caching
  DMGTFormCloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt DMGTFormWebsiteBucket.RegionalDomainName
            Id: S3Origin
            S3OriginConfig:
              OriginAccessIdentity: ''
        Enabled: true
        DefaultRootObject: index.html
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          Compress: true
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        PriceClass: PriceClass_100
        Comment: !Sub 'CloudFront distribution for dmgt-basic-form-${Environment}'
      Tags:
        - Key: Project
          Value: dmgt-basic-form
        - Key: Environment
          Value: !Ref Environment

Outputs:
  WebsiteBucketName:
    Description: Name of the S3 bucket for website hosting
    Value: !Ref DMGTFormWebsiteBucket
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteBucket'

  ConfigBucketName:
    Description: Name of the S3 bucket for form configuration
    Value: !Ref DMGTFormConfigBucket
    Export:
      Name: !Sub '${AWS::StackName}-ConfigBucket'

  ResponsesBucketName:
    Description: Name of the S3 bucket for form responses
    Value: !Ref DMGTFormResponsesBucket
    Export:
      Name: !Sub '${AWS::StackName}-ResponsesBucket'

  ApiGatewayUrl:
    Description: URL of the API Gateway
    Value: !Sub 'https://${DMGTFormAPI}.execute-api.${AWS::Region}.amazonaws.com/${Environment}'
    Export:
      Name: !Sub '${AWS::StackName}-ApiUrl'

  CloudFrontDomainName:
    Description: CloudFront Distribution Domain Name
    Value: !GetAtt DMGTFormCloudFrontDistribution.DomainName
    Export:
      Name: !Sub '${AWS::StackName}-CloudFrontDomain'

  WebsiteURL:
    Description: Website URL
    Value: !Sub 'https://${DMGTFormCloudFrontDistribution.DomainName}'
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteURL'

  LambdaFunctionName:
    Description: Name of the main Lambda function
    Value: !Ref DMGTFormMainLambda
    Export:
      Name: !Sub '${AWS::StackName}-LambdaFunction'
